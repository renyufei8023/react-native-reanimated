"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[8050],{14663:e=>{e.exports=JSON.parse('{"permalink":"/react-native-reanimated/examples/switch","source":"@site/blog/switch.md","title":"Switch","description":"A switch element is a user interface component that allows users to toggle between two or more states. It is commonly used to turn on/off a setting, enable/disable a feature, or select between options.","date":"2025-07-16T16:13:24.000Z","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"switch","title":"Switch"},"unlisted":false,"prevItem":{"title":"Slider","permalink":"/react-native-reanimated/examples/slider"}}')},26818:(e,t,n)=>{n.d(t,{A:()=>w});const a="collapseButton_X7H2",o="arrow_XdVJ";var s,r=n(96540);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)({}).hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},i.apply(null,arguments)}const l=e=>{let{title:t,titleId:n,...a}=e;return r.createElement("svg",i({xmlns:"http://www.w3.org/2000/svg",width:12,height:7,fill:"none",viewBox:"0 0 12 7","aria-labelledby":n},a),t?r.createElement("title",{id:n},t):null,s||(s=r.createElement("path",{stroke:"#001A72",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"m1 1 5 5 5-5"})))};var c;function d(){return d=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)({}).hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},d.apply(null,arguments)}const u=e=>{let{title:t,titleId:n,...a}=e;return r.createElement("svg",d({xmlns:"http://www.w3.org/2000/svg",width:12,height:7,fill:"none",viewBox:"0 0 12 7","aria-labelledby":n},a),t?r.createElement("title",{id:n},t):null,c||(c=r.createElement("path",{stroke:"#F8F9FF",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1.5,d:"m1 1 5 5 5-5"})))};var h=n(8532),m=n(34164),p=n(74848);const w=e=>{let{label:t,labelCollapsed:n,collapsed:s,onCollapse:r,className:i}=e;const{colorMode:c}=(0,h.G)();return(0,p.jsxs)("div",{className:(0,m.A)(a,i),"data-collapsed":s,onClick:()=>r(),children:["light"===c?(0,p.jsx)(l,{className:o}):(0,p.jsx)(u,{className:o}),(0,p.jsx)("button",{children:s?n:t})]})}},27402:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>h});var a=n(14663),o=n(74848),s=n(28453),r=n(72344),i=n(68924),l=n(58801);const c={slug:"switch",title:"Switch"},d=void 0,u={authorsImageUrls:[]},h=[];function m(e){const t={a:"a",code:"code",p:"p",strong:"strong",...(0,s.R)(),...e.components},{ExampleVideo:n,InteractiveExample:a}=t;return n||w("ExampleVideo",!0),a||w("InteractiveExample",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"A switch element is a user interface component that allows users to toggle between two or more states. It is commonly used to turn on/off a setting, enable/disable a feature, or select between options."}),"\n","\n",(0,o.jsx)(a,{src:i.A,component:r.A}),"\n",(0,o.jsxs)(t.p,{children:["The following implementation of a switch relies on ",(0,o.jsx)(t.a,{href:"/docs/fundamentals/glossary#animatable-value",children:"animatable values"}),". Leveraging animatable values of color and position enables smooth transition between the two states."]}),"\n",(0,o.jsx)("samp",{id:"Switch",children:"Switch"}),"\n",(0,o.jsx)(l.A,{src:i.A,showLines:[26,52]}),"\n",(0,o.jsx)(n,{sources:{android:"/react-native-reanimated/recordings/examples/switch_android.mp4",ios:"/react-native-reanimated/recordings/examples/switch_ios.mov"}}),"\n",(0,o.jsxs)(t.p,{children:["We use the ",(0,o.jsx)(t.code,{children:"useSharedValue"})," hook to store the dimensions of the element, which allows for precise calculation of position changes during the animation. The hook is there to prevent unnecessary re-renders."]}),"\n",(0,o.jsx)(l.A,{src:i.A,showLines:[23,25]}),"\n",(0,o.jsxs)(t.p,{children:["The values are updated during the ",(0,o.jsx)(t.code,{children:"onLayout"})," event of the element."]}),"\n",(0,o.jsx)(l.A,{src:i.A,showLines:[56,61]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.strong,{children:"Switch"})," component can represent any boolean value passed as a prop. The state dynamically adjusts based on the ",(0,o.jsx)(t.code,{children:"value"})," prop resulting in smooth transition animations. It enables passing any function using the ",(0,o.jsx)(t.code,{children:"onPress"})," prop. The ",(0,o.jsx)(t.code,{children:"duration"})," prop controls the duration of the animation. The ",(0,o.jsx)(t.code,{children:"style"})," and ",(0,o.jsx)(t.code,{children:"trackColors"})," props enable personalization."]}),"\n",(0,o.jsx)("samp",{id:"Switch",children:"Switch"}),"\n",(0,o.jsx)(l.A,{src:i.A,showLines:[16,67]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}function w(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},58801:(e,t,n)=>{n.d(t,{A:()=>l});var a=n(96540),o=n(58069);const s={container:"container_oGcb",collapseButton:"collapseButton_YVdr"};var r=n(26818),i=n(74848);function l(e){let{src:t,showLines:n}=e;const[l,c]=(0,a.useState)(!0);if(!n)return(0,i.jsx)(o.A,{language:"jsx",children:t});const[d,u]=n,h=t.split("\n").slice(d,u+1).join("\n");return(0,i.jsxs)("div",{className:s.container,children:[(0,i.jsx)(r.A,{label:"Collapse the full code",labelCollapsed:"Expand the full code",collapsed:l,onCollapse:()=>c(!l),className:s.collapseButton}),(0,i.jsx)(o.A,{language:"jsx",children:l?h:t})]})}},62257:(e,t,n)=>{n.d(t,{A:()=>c});var a=n(96540),o=n(72188),s=n(46413),r=n(78506),i=a.forwardRef(((e,t)=>{var n=e.accessibilityLabel,o=e.color,i=e.disabled,c=e.onPress,d=e.testID,u=e.title;return a.createElement(s.A,{accessibilityLabel:n,accessibilityRole:"button",disabled:i,focusable:!i,onPress:c,ref:t,style:[l.button,o&&{backgroundColor:o},i&&l.buttonDisabled],testID:d},a.createElement(r.A,{style:[l.text,i&&l.textDisabled]},u))}));i.displayName="Button";var l=o.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const c=i},68444:(e,t,n)=>{n.d(t,{A:()=>m});var a=n(58168),o=n(98587),s=n(96540),r=n(72188),i=n(9176),l=n(7162),c=["style"],d=l.A&&window.CSS&&window.CSS.supports&&window.CSS.supports("top: constant(safe-area-inset-top)")?"constant":"env",u=s.forwardRef(((e,t)=>{var n=e.style,l=(0,o.A)(e,c);return s.createElement(i.A,(0,a.A)({},l,{ref:t,style:r.A.compose(h.root,n)}))}));u.displayName="SafeAreaView";var h=r.A.create({root:{paddingTop:d+"(safe-area-inset-top)",paddingRight:d+"(safe-area-inset-right)",paddingBottom:d+"(safe-area-inset-bottom)",paddingLeft:d+"(safe-area-inset-left)"}});const m=u},68924:(e,t,n)=>{n.d(t,{A:()=>a});const a="import React from 'react';\nimport {\n  Pressable,\n  SafeAreaView,\n  View,\n  StyleSheet,\n  Button,\n} from 'react-native';\nimport Animated, {\n  interpolate,\n  interpolateColor,\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\n\nconst Switch = ({\n  value,\n  onPress,\n  style,\n  duration = 400,\n  trackColors = { on: '#82cab2', off: '#fa7f7c' },\n}) => {\n  const height = useSharedValue(0);\n  const width = useSharedValue(0);\n\n  const trackAnimatedStyle = useAnimatedStyle(() => {\n    const color = interpolateColor(\n      value.value,\n      [0, 1],\n      [trackColors.off, trackColors.on]\n    );\n    const colorValue = withTiming(color, { duration });\n\n    return {\n      backgroundColor: colorValue,\n      borderRadius: height.value / 2,\n    };\n  });\n\n  const thumbAnimatedStyle = useAnimatedStyle(() => {\n    const moveValue = interpolate(\n      Number(value.value),\n      [0, 1],\n      [0, width.value - height.value]\n    );\n    const translateValue = withTiming(moveValue, { duration });\n\n    return {\n      transform: [{ translateX: translateValue }],\n      borderRadius: height.value / 2,\n    };\n  });\n\n  return (\n    <Pressable onPress={onPress}>\n      <Animated.View\n        onLayout={(e) => {\n          height.value = e.nativeEvent.layout.height;\n          width.value = e.nativeEvent.layout.width;\n        }}\n        style={[switchStyles.track, style, trackAnimatedStyle]}>\n        <Animated.View\n          style={[switchStyles.thumb, thumbAnimatedStyle]}></Animated.View>\n      </Animated.View>\n    </Pressable>\n  );\n};\n\nconst switchStyles = StyleSheet.create({\n  track: {\n    alignItems: 'flex-start',\n    width: 100,\n    height: 40,\n    padding: 5,\n  },\n  thumb: {\n    height: '100%',\n    aspectRatio: 1,\n    backgroundColor: 'white',\n  },\n});\n\nexport default function App() {\n  const isOn = useSharedValue(false);\n\n  const handlePress = () => {\n    isOn.value = !isOn.value;\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Switch value={isOn} onPress={handlePress} style={styles.switch} />\n      <View style={styles.buttonContainer}>\n        <Button onPress={handlePress} title=\"Click me\" />\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  switch: {\n    width: 200,\n    height: 80,\n    padding: 10,\n  },\n  container: {\n    flex: 1,\n    height: 300,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonContainer: {\n    paddingTop: '1rem',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n"},72344:(e,t,n)=>{n.d(t,{A:()=>p});n(96540);var a=n(70690),o=n(72188),s=n(68444),r=n(9176),i=n(62257),l=n(55535),c=n(74848);const d={code:"function SwitchJs1(){const{interpolateColor,value,trackColors,withTiming,duration,height}=this.__closure;const color=interpolateColor(value.value,[0,1],[trackColors.off,trackColors.on]);const colorValue=withTiming(color,{duration:duration});return{backgroundColor:colorValue,borderRadius:height.value/2};}"},u={code:"function SwitchJs2(){const{interpolate,value,width,height,withTiming,duration}=this.__closure;const moveValue=interpolate(Number(value.value),[0,1],[0,width.value-height.value]);const translateValue=withTiming(moveValue,{duration:duration});return{transform:[{translateX:translateValue}],borderRadius:height.value/2};}"},h=e=>{let{value:t,onPress:n,style:o,duration:s=400,trackColors:r={on:"#82cab2",off:"#fa7f7c"}}=e;const i=(0,l.useSharedValue)(0),h=(0,l.useSharedValue)(0),p=(0,l.useAnimatedStyle)(function(){const e=function(){const e=(0,l.interpolateColor)(t.value,[0,1],[r.off,r.on]);return{backgroundColor:(0,l.withTiming)(e,{duration:s}),borderRadius:i.value/2}};return e.__closure={interpolateColor:l.interpolateColor,value:t,trackColors:r,withTiming:l.withTiming,duration:s,height:i},e.__workletHash=1970655606697,e.__initData=d,e}()),w=(0,l.useAnimatedStyle)(function(){const e=function(){const e=(0,l.interpolate)(Number(t.value),[0,1],[0,h.value-i.value]);return{transform:[{translateX:(0,l.withTiming)(e,{duration:s})}],borderRadius:i.value/2}};return e.__closure={interpolate:l.interpolate,value:t,width:h,height:i,withTiming:l.withTiming,duration:s},e.__workletHash=9540285382782,e.__initData=u,e}());return(0,c.jsx)(a.A,{onPress:n,children:(0,c.jsx)(l.default.View,{onLayout:e=>{i.value=e.nativeEvent.layout.height,h.value=e.nativeEvent.layout.width},style:[m.track,o,p],children:(0,c.jsx)(l.default.View,{style:[m.thumb,w]})})})},m=o.A.create({track:{alignItems:"flex-start",width:100,height:40,padding:5},thumb:{height:"100%",aspectRatio:1,backgroundColor:"white"}});function p(){const e=(0,l.useSharedValue)(!1),t=()=>{e.value=!e.value};return(0,c.jsxs)(s.A,{style:w.container,children:[(0,c.jsx)(h,{value:e,onPress:t,style:w.switch}),(0,c.jsx)(r.A,{style:w.buttonContainer,children:(0,c.jsx)(i.A,{onPress:t,title:"Click me"})})]})}const w=o.A.create({switch:{width:200,height:80,padding:10},container:{flex:1,height:300,alignItems:"center",justifyContent:"center"},buttonContainer:{paddingTop:"1rem",display:"flex",flexDirection:"row",justifyContent:"center",alignItems:"center"}})}}]);