"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[1893],{61687:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>v,contentTitle:()=>w,default:()=>k,frontMatter:()=>j,metadata:()=>r,toc:()=>P});const r=JSON.parse('{"id":"css-transitions/transition-property","title":"transitionProperty","description":"transitionProperty lets you specify the name or names of styles properties to transition.","source":"@site/docs/css-transitions/transition-property.mdx","sourceDirName":"css-transitions","slug":"/css-transitions/transition-property","permalink":"/react-native-reanimated/docs/css-transitions/transition-property","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/css-transitions/transition-property.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"CSS Transitions","permalink":"/react-native-reanimated/docs/category/css-transitions"},"next":{"title":"transitionDuration","permalink":"/react-native-reanimated/docs/css-transitions/transition-duration"}}');var i=t(74848),o=t(28453),s=t(96540),a=t(9176),l=t(62257),c=t(72188),d=t(55535);function p(){const[e,n]=(0,s.useReducer)((e=>!e),!1);return(0,i.jsxs)(a.A,{style:h.container,children:[(0,i.jsx)(d.default.View,{style:[h.box,{width:e?240:120,backgroundColor:e?"#fa7f7c":"#87cce8",transitionProperty:["width","backgroundColor"],transitionDuration:500}]}),(0,i.jsx)(l.A,{onPress:n,title:"Click me"})]})}const h=c.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,marginVertical:64}}),u="import React, { useReducer } from 'react';\nimport { StyleSheet, View, Button } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nexport default function App() {\n  const [isToggled, toggle] = useReducer((s) => !s, false);\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            width: isToggled ? 240 : 120,\n            backgroundColor: isToggled ? '#fa7f7c' : '#87cce8',\n            // highlight-next-line\n            transitionProperty: ['width', 'backgroundColor'],\n            transitionDuration: 500,\n          },\n        ]}\n      />\n      <Button onPress={toggle} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    marginVertical: 64,\n  },\n});\n";var y=t(70690);const m=d.default.createAnimatedComponent(y.A),x=["#fa7f7c","#b58df1","#ffe780","#82cab2","#87cce8"];function f(e){let{width:n}=e;const t=n>500?x:x.slice(0,3),[r,o]=(0,s.useState)(0);return(0,i.jsx)(a.A,{style:g.container,children:t.map(((e,n)=>(0,i.jsx)(m,{onPress:()=>o(n),style:[g.box,{backgroundColor:e,flexGrow:n===r?3:1,transitionProperty:"flexGrow",transitionDuration:300}]},n)))})}const g=c.A.create({container:{flex:1,flexDirection:"row",alignItems:"center",justifyContent:"center",height:"100%",gap:16,marginHorizontal:16},box:{height:120,marginVertical:64}}),b="import React, { useState } from 'react';\nimport { StyleSheet, View, Pressable } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nconst COLORS = ['#fa7f7c', '#b58df1', '#ffe780', '#82cab2', '#87cce8'];\n\ninterface AppProps {\n  width: number;\n}\n\nexport default function App({ width }: AppProps) {\n  const colors = width > 500 ? COLORS : COLORS.slice(0, 3);\n  const [expandedId, setExpandedId] = useState(0);\n\n  return (\n    <View style={styles.container}>\n      {colors.map((color, id) => {\n        return (\n          <AnimatedPressable\n            onPress={() => setExpandedId(id)}\n            key={id}\n            style={[\n              styles.box,\n              {\n                backgroundColor: color,\n                flexGrow: id === expandedId ? 3 : 1,\n                // highlight-next-line\n                transitionProperty: 'flexGrow',\n                transitionDuration: 300,\n              },\n            ]}\n          />\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    gap: 16,\n    marginHorizontal: 16,\n  },\n  box: {\n    height: 120,\n    marginVertical: 64,\n  },\n});\n",j={sidebar_position:2},w="transitionProperty",v={},P=[{value:"Reference",id:"reference",level:2},{value:"Values",id:"values",level:3},{value:"<code>&lt;style property&gt;</code>",id:"style-property",level:4},{value:"<code>&lt;style property&gt;[]</code>",id:"style-property-1",level:4},{value:"<code>all</code>",id:"all",level:4},{value:"<code>none</code>",id:"none",level:4},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function S(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{Details:t,InteractiveExample:r,PlatformCompatibility:s}=n;return t||C("Details",!0),r||C("InteractiveExample",!0),s||C("PlatformCompatibility",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"transitionproperty",children:"transitionProperty"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"transitionProperty"})," lets you specify the name or names of styles properties to transition."]}),"\n","\n",(0,i.jsx)(r,{src:u,component:p}),"\n",(0,i.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"function App() {\n  return (\n    <Animated.View\n      style={{\n        // highlight-next-line\n        transitionProperty: 'width',\n        transitionDuration: 300,\n      }}\n    />\n  );\n}\n"})}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Type definitions"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import type { ImageStyle, TextStyle, ViewStyle } from 'react-native';\n\ntype PlainStyle = ViewStyle & TextStyle & ImageStyle;\n\ntype CSSTransitionProperty<S extends object = PlainStyle> =\n  | 'all'\n  | 'none'\n  | keyof S\n  | ('all' | keyof S)[];\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"values",children:"Values"}),"\n",(0,i.jsx)(n.h4,{id:"style-property",children:(0,i.jsx)(n.code,{children:"<style property>"})}),"\n",(0,i.jsx)(n.p,{children:"A string which is a single style property to transition when it's value changes."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"transitionProperty: 'backgroundColor';\n"})}),"\n",(0,i.jsx)(n.h4,{id:"style-property-1",children:(0,i.jsx)(n.code,{children:"<style property>[]"})}),"\n",(0,i.jsx)(n.p,{children:"An array of strings which are properties to transition when their values changes."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"transitionProperty: ['borderWidth', 'borderColor'];\n"})}),"\n",(0,i.jsx)(n.h4,{id:"all",children:(0,i.jsx)(n.code,{children:"all"})}),"\n",(0,i.jsx)(n.p,{children:"Every property that can be transitioned will be."}),"\n",(0,i.jsx)(n.h4,{id:"none",children:(0,i.jsx)(n.code,{children:"none"})}),"\n",(0,i.jsx)(n.p,{children:"No properties will transition."}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n","\n",(0,i.jsx)(r,{src:b,component:f,label:"Click rectangles to grow"}),"\n",(0,i.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["You need to use the ",(0,i.jsx)(n.a,{href:"/docs/css-transitions/transition-duration",children:(0,i.jsx)(n.code,{children:"transitionDuration"})})," alongside the ",(0,i.jsx)(n.code,{children:"transitionProperty"})," to create transitions."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The property that you want to transition using ",(0,i.jsx)(n.code,{children:"transitionProperty"})," needs to be applied to the same component."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Discrete style properties (like ",(0,i.jsx)(n.code,{children:"flexDirection"}),", ",(0,i.jsx)(n.code,{children:"justifyContent"}),") can't be smoothly animated using the ",(0,i.jsx)(n.code,{children:"transitionProperty"})," property. For example, you can't animate smoothly from ",(0,i.jsx)(n.code,{children:"alignItems: start"})," to ",(0,i.jsx)(n.code,{children:"alignItems: center"}),". You can use ",(0,i.jsx)(n.a,{href:"/docs/layout-animations/layout-transitions",children:"Layout Animations"})," to animate discrete style properties instead."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["We discourage the use of ",(0,i.jsx)(n.code,{children:"all"})," property as it can lead to performance issues."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,i.jsx)(s,{android:!0,ios:!0,web:!0})]})}function k(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(S,{...e})}):S(e)}function C(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},62257:(e,n,t)=>{t.d(n,{A:()=>c});var r=t(96540),i=t(72188),o=t(46413),s=t(78506),a=r.forwardRef(((e,n)=>{var t=e.accessibilityLabel,i=e.color,a=e.disabled,c=e.onPress,d=e.testID,p=e.title;return r.createElement(o.A,{accessibilityLabel:t,accessibilityRole:"button",disabled:a,focusable:!a,onPress:c,ref:n,style:[l.button,i&&{backgroundColor:i},a&&l.buttonDisabled],testID:d},r.createElement(s.A,{style:[l.text,a&&l.textDisabled]},p))}));a.displayName="Button";var l=i.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const c=a}}]);