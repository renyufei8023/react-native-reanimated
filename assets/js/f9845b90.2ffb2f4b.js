"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[9374],{30011:(e,n,t)=>{t.d(n,{A:()=>i});const i="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  withTiming,\n  withSequence,\n  Easing,\n  withRepeat,\n} from 'react-native-reanimated';\n\nconst duration = 800;\n\ninterface AppProps {\n  width: number;\n}\n\nexport default function App({ width }: AppProps) {\n  const offset = useSharedValue<number>(width / 2 - 240);\n\n  const animatedStyles = useAnimatedStyle(() => ({\n    transform: [{ translateX: offset.value }],\n  }));\n\n  React.useEffect(() => {\n    offset.value = withRepeat(\n      // highlight-start\n      withSequence(\n        withTiming(-width / 2 + 240, { duration, easing: Easing.cubic }),\n        withTiming(0, { duration, easing: Easing.cubic }),\n        withTiming(width / 2 - 240, { duration, easing: Easing.cubic })\n      ),\n      // highlight-end\n      -1,\n      true\n    );\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={[styles.box, animatedStyles]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n  },\n});\n"},30938:(e,n,t)=>{t.d(n,{A:()=>l});var i=t(96540),a=t(9176),s=t(72188),r=t(55535),o=t(74848);const c=800,d={code:"function SequenceBasicTsx1(){const{offset}=this.__closure;return{transform:[{translateX:offset.value}]};}"};function l(e){let{width:n}=e;const t=(0,r.useSharedValue)(n/2-240),s=(0,r.useAnimatedStyle)(function(){const e=()=>({transform:[{translateX:t.value}]});return e.__closure={offset:t},e.__workletHash=0xfde66edb755,e.__initData=d,e}());return i.useEffect((()=>{t.value=(0,r.withRepeat)((0,r.withSequence)((0,r.withTiming)(-n/2+240,{duration:c,easing:r.Easing.cubic}),(0,r.withTiming)(0,{duration:c,easing:r.Easing.cubic}),(0,r.withTiming)(n/2-240,{duration:c,easing:r.Easing.cubic})),-1,!0)}),[]),(0,o.jsx)(a.A,{style:u.container,children:(0,o.jsx)(r.default.View,{style:[u.box,s]})})}const u=s.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,backgroundColor:"#b58df1",borderRadius:20}})},34985:(e,n,t)=>{t.d(n,{A:()=>h});var i=t(9176),a=t(62257),s=t(72188),r=t(55535),o=t(74848);const c=10,d=100,l=r.Easing.elastic(1.5),u={code:'function SequenceWobbleTsx1(){const{rotation}=this.__closure;return{transform:[{rotateZ:rotation.value+"deg"}]};}'};function h(){const e=(0,r.useSharedValue)(0),n=(0,r.useAnimatedStyle)(function(){const n=()=>({transform:[{rotateZ:`${e.value}deg`}]});return n.__closure={rotation:e},n.__workletHash=4005346110702,n.__initData=u,n}());return(0,o.jsxs)(i.A,{style:m.container,children:[(0,o.jsx)(r.default.View,{style:[m.box,n]}),(0,o.jsx)(a.A,{title:"wobble",onPress:()=>{e.value=(0,r.withSequence)((0,r.withTiming)(-c,{duration:d/2,easing:l}),(0,r.withRepeat)((0,r.withTiming)(c,{duration:d,easing:l}),7,!0),(0,r.withTiming)(0,{duration:d/2,easing:l}))}})]})}const m=s.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,backgroundColor:"#b58df1",borderRadius:20,marginBottom:30}})},44385:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>u,default:()=>g,frontMatter:()=>l,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"animations/withSequence","title":"withSequence","description":"withSequence is an animation modifier that lets you run animations in a sequence.","source":"@site/versioned_docs/version-3.x/animations/withSequence.mdx","sourceDirName":"animations","slug":"/animations/withSequence","permalink":"/react-native-reanimated/docs/3.x/animations/withSequence","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/versioned_docs/version-3.x/animations/withSequence.mdx","tags":[],"version":"3.x","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"withDecay","permalink":"/react-native-reanimated/docs/3.x/animations/withDecay"},"next":{"title":"withRepeat","permalink":"/react-native-reanimated/docs/3.x/animations/withRepeat"}}');var a=t(74848),s=t(28453),r=t(30938),o=t(30011),c=t(34985),d=t(44866);const l={sidebar_position:4},u="withSequence",h={},m=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>reduceMotion</code> <Optional></Optional>",id:"reducemotion-",level:4},{value:"<code>...animations</code>",id:"animations",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function f(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components},{Details:t,InteractiveExample:i,Optional:l,PlatformCompatibility:u}=n;return t||b("Details",!0),i||b("InteractiveExample",!0),l||b("Optional",!0),u||b("PlatformCompatibility",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"withsequence",children:"withSequence"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"withSequence"})," is an ",(0,a.jsx)(n.a,{href:"/docs/fundamentals/glossary#animation-modifier",children:"animation modifier"})," that lets you run animations in a sequence."]}),"\n","\n",(0,a.jsx)(i,{src:o.A,component:r.A}),"\n",(0,a.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"import { withSequence } from 'react-native-reanimated';\n\nfunction App() {\n  sv.value = withSequence(withTiming(50), withTiming(0));\n  // ...\n}\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Type definitions"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"type AnimatableValue = number | string | number[];\n\nfunction withSequence<T extends AnimatableValue>(\n  reduceMotion?: ReduceMotion,\n  ...animations: [T, ...T[]]\n): T;\n\nenum ReduceMotion {\n  System = 'system',\n  Always = 'always',\n  Never = 'never',\n}\n"})})]}),"\n",(0,a.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsxs)(n.h4,{id:"reducemotion-",children:[(0,a.jsx)(n.code,{children:"reduceMotion"})," ",(0,a.jsx)(l,{})]}),"\n",(0,a.jsx)(n.p,{children:"A parameter that determines how the animation responds to the device's reduced motion accessibility setting."}),"\n",(0,a.jsx)(n.h4,{id:"animations",children:(0,a.jsx)(n.code,{children:"...animations"})}),"\n",(0,a.jsxs)(n.p,{children:["Any number of ",(0,a.jsx)(n.a,{href:"/docs/fundamentals/glossary#animation-object",children:"animation objects"})," to be run in a sequence."]}),"\n",(0,a.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"withSequence"})," returns an ",(0,a.jsx)(n.a,{href:"/docs/fundamentals/glossary#animation-object",children:"animation object"})," which holds the current state of the animation. It can be either assigned directly to a ",(0,a.jsx)(n.a,{href:"/docs/fundamentals/glossary#shared-value",children:"shared value"})," or can be used as a value for a style object returned from ",(0,a.jsx)(n.a,{href:"/docs/core/useAnimatedStyle",children:"useAnimatedStyle"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n","\n",(0,a.jsx)(i,{src:d.A,component:c.A}),"\n",(0,a.jsx)(n.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,a.jsx)(u,{android:!0,ios:!0,web:!0})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}function b(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},44866:(e,n,t)=>{t.d(n,{A:()=>i});const i="import React from 'react';\nimport { View, Button, StyleSheet } from 'react-native';\nimport Animated, {\n  useSharedValue,\n  withTiming,\n  Easing,\n  useAnimatedStyle,\n  withRepeat,\n  withSequence,\n} from 'react-native-reanimated';\n\nconst ANGLE = 10;\nconst TIME = 100;\nconst EASING = Easing.elastic(1.5);\n\nexport default function App() {\n  const rotation = useSharedValue<number>(0);\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [{ rotateZ: `${rotation.value}deg` }],\n  }));\n\n  const handlePress = () => {\n    // highlight-next-line\n    rotation.value = withSequence(\n      // deviate left to start from -ANGLE\n      withTiming(-ANGLE, { duration: TIME / 2, easing: EASING }),\n      // wobble between -ANGLE and ANGLE 7 times\n      withRepeat(\n        withTiming(ANGLE, {\n          duration: TIME,\n          easing: EASING,\n        }),\n        7,\n        true\n      ),\n      // go back to 0 at the end\n      withTiming(0, { duration: TIME / 2, easing: EASING })\n      // highlight-next-line\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={[styles.box, animatedStyle]} />\n      <Button title=\"wobble\" onPress={handlePress} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n    marginBottom: 30,\n  },\n});\n"},62257:(e,n,t)=>{t.d(n,{A:()=>d});var i=t(96540),a=t(72188),s=t(46413),r=t(78506),o=i.forwardRef(((e,n)=>{var t=e.accessibilityLabel,a=e.color,o=e.disabled,d=e.onPress,l=e.testID,u=e.title;return i.createElement(s.A,{accessibilityLabel:t,accessibilityRole:"button",disabled:o,focusable:!o,onPress:d,ref:n,style:[c.button,a&&{backgroundColor:a},o&&c.buttonDisabled],testID:l},i.createElement(r.A,{style:[c.text,o&&c.textDisabled]},u))}));o.displayName="Button";var c=a.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const d=o}}]);