"use strict";(self.webpackChunkdocs_worklets=self.webpackChunkdocs_worklets||[]).push([[27],{5320:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"1.x","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Fundamentals","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Getting started","href":"/react-native-worklets/docs/","docId":"fundamentals/getting-started","unlisted":false},{"type":"link","label":"Glossary of terms","href":"/react-native-worklets/docs/fundamentals/glossary","docId":"fundamentals/glossary","unlisted":false}],"href":"/react-native-worklets/docs/category/fundamentals"},{"type":"category","label":"Threading","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"runOnJS","href":"/react-native-worklets/docs/threading/runOnJS","docId":"threading/runOnJS","unlisted":false},{"type":"link","label":"runOnUI","href":"/react-native-worklets/docs/threading/runOnUI","docId":"threading/runOnUI","unlisted":false},{"type":"link","label":"runOnUIAsync","href":"/react-native-worklets/docs/threading/runOnUIAsync","docId":"threading/runOnUIAsync","unlisted":false},{"type":"link","label":"executeOnUIRuntimeSync","href":"/react-native-worklets/docs/threading/executeOnUIRuntimeSync","docId":"threading/executeOnUIRuntimeSync","unlisted":false},{"type":"link","label":"runOnRuntime","href":"/react-native-worklets/docs/threading/runOnRuntime","docId":"threading/runOnRuntime","unlisted":false},{"type":"link","label":"createWorkletRuntime","href":"/react-native-worklets/docs/threading/createWorkletRuntime","docId":"threading/createWorkletRuntime","unlisted":false},{"type":"link","label":"callMicrotasks","href":"/react-native-worklets/docs/threading/callMicrotasks","docId":"threading/callMicrotasks","unlisted":false},{"type":"link","label":"isWorkletFunction","href":"/react-native-worklets/docs/threading/isWorkletFunction","docId":"threading/isWorkletFunction","unlisted":false}],"href":"/react-native-worklets/docs/category/threading"},{"type":"category","label":"Memory","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"makeShareable","href":"/react-native-worklets/docs/memory/makeShareable","docId":"memory/makeShareable","unlisted":false},{"type":"link","label":"makeShareableCloneRecursive","href":"/react-native-worklets/docs/memory/makeShareableCloneRecursive","docId":"memory/makeShareableCloneRecursive","unlisted":false},{"type":"link","label":"makeShareableCloneOnUIRecursive","href":"/react-native-worklets/docs/memory/makeShareableCloneOnUIRecursive","docId":"memory/makeShareableCloneOnUIRecursive","unlisted":false}],"href":"/react-native-worklets/docs/category/memory"},{"type":"category","label":"Reanimated Babel plugin","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"About","href":"/react-native-worklets/docs/reanimated-babel-plugin/about","docId":"reanimated-babel-plugin/about","unlisted":false},{"type":"link","label":"Options","href":"/react-native-worklets/docs/reanimated-babel-plugin/plugin-options","docId":"reanimated-babel-plugin/plugin-options","unlisted":false}],"href":"/react-native-worklets/docs/category/reanimated-babel-plugin"},{"type":"category","label":"Experimental","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Bundle Mode","href":"/react-native-worklets/docs/experimental/bundleMode","docId":"experimental/bundleMode","unlisted":false}],"href":"/react-native-worklets/docs/category/experimental"},{"type":"category","label":"Guides","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Troubleshooting","href":"/react-native-worklets/docs/guides/troubleshooting","docId":"guides/troubleshooting","unlisted":false}],"href":"/react-native-worklets/docs/category/guides"}]},"docs":{"experimental/bundleMode":{"id":"experimental/bundleMode","title":"Bundle Mode","description":"Bundle Mode is a feature that gives worklets access to your whole JavaScript bundle - meaning that any code that\'s present in the bundle can be executed in any worklet and on any runtime. This means that 3rd party libraries can be used in worklets without any tricks like patching them with a \'worklet\' directive.","sidebar":"tutorialSidebar"},"fundamentals/getting-started":{"id":"fundamentals/getting-started","title":"Getting started","description":"React Native Worklets is a library that allows you to run JavaScript code in parallel on multiple threads and runtimes.","sidebar":"tutorialSidebar"},"fundamentals/glossary":{"id":"fundamentals/glossary","title":"Glossary of terms","description":"Worklet","sidebar":"tutorialSidebar"},"guides/troubleshooting":{"id":"guides/troubleshooting","title":"Troubleshooting","description":"Failed to create a worklet","sidebar":"tutorialSidebar"},"memory/makeShareable":{"id":"memory/makeShareable","title":"makeShareable","description":"makeShareable lets you create a Shareable object from a given value on the UI thread.","sidebar":"tutorialSidebar"},"memory/makeShareableCloneOnUIRecursive":{"id":"memory/makeShareableCloneOnUIRecursive","title":"makeShareableCloneOnUIRecursive","description":"makeShareableCloneOnUIRecursive recursively converts JavaScript values into shareable references that can be used on different Runtimes than UI Runtime.","sidebar":"tutorialSidebar"},"memory/makeShareableCloneRecursive":{"id":"memory/makeShareableCloneRecursive","title":"makeShareableCloneRecursive","description":"makeShareableCloneRecursive recursively converts JavaScript values into shareable references that can be used on different Runtimes than RN Runtime.","sidebar":"tutorialSidebar"},"reanimated-babel-plugin/about":{"id":"reanimated-babel-plugin/about","title":"About","description":"What is Reanimated Babel Plugin?","sidebar":"tutorialSidebar"},"reanimated-babel-plugin/plugin-options":{"id":"reanimated-babel-plugin/plugin-options","title":"Options","description":"Our plugin offers several optional functionalities that you may need to employ advanced APIs:","sidebar":"tutorialSidebar"},"threading/callMicrotasks":{"id":"threading/callMicrotasks","title":"callMicrotasks","description":"callMicrotasks flushes the microtask queue from the UI thread.","sidebar":"tutorialSidebar"},"threading/createWorkletRuntime":{"id":"threading/createWorkletRuntime","title":"createWorkletRuntime","description":"createWorkletRuntime lets you create a new JS runtime which can be used to run worklets possibly on different threads than JS or UI thread. This function is supposed to be used by third-party libraries that need to integrate with worklets. The return value represents the runtime and it\'s supposed to be passed to C++ side using JSI (JavaScript Interface) for further operations.","sidebar":"tutorialSidebar"},"threading/executeOnUIRuntimeSync":{"id":"threading/executeOnUIRuntimeSync","title":"executeOnUIRuntimeSync","description":"executeOnUIRuntimeSync lets you run a workletized function synchronously on the UI thread.","sidebar":"tutorialSidebar"},"threading/isWorkletFunction":{"id":"threading/isWorkletFunction","title":"isWorkletFunction","description":"isWorkletFunction checks if a function is a worklet function. It only works with Reanimated Babel plugin enabled. Unless you are doing something with internals of Reanimated you shouldn\'t need to use this function.","sidebar":"tutorialSidebar"},"threading/runOnJS":{"id":"threading/runOnJS","title":"runOnJS","description":"runOnJS lets you asynchronously run non-workletized functions that couldn\'t otherwise run on the UI thread. This applies to most external libraries as they don\'t have their functions marked with \\"worklet\\"; directive.","sidebar":"tutorialSidebar"},"threading/runOnRuntime":{"id":"threading/runOnRuntime","title":"runOnRuntime","description":"runOnRuntime lets you asynchronously run workletized functions on a separate worklet runtime on a separate thread.","sidebar":"tutorialSidebar"},"threading/runOnUI":{"id":"threading/runOnUI","title":"runOnUI","description":"runOnUI lets you asynchronously run workletized functions on the UI thread.","sidebar":"tutorialSidebar"},"threading/runOnUIAsync":{"id":"threading/runOnUIAsync","title":"runOnUIAsync","description":"runOnUIAsync lets you asynchronously run workletized functions on the UI thread.","sidebar":"tutorialSidebar"}}}}')}}]);