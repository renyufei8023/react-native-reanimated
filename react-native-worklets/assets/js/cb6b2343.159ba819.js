"use strict";(self.webpackChunkdocs_worklets=self.webpackChunkdocs_worklets||[]).push([[330],{620:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var a=r(9471);const t={},o=a.createContext(t);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(o.Provider,{value:n},e.children)}},1300:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"memory/makeShareableCloneOnUIRecursive","title":"makeShareableCloneOnUIRecursive","description":"makeShareableCloneOnUIRecursive recursively converts JavaScript values into shareable references that can be used on different Runtimes than UI Runtime.","source":"@site/docs/memory/makeShareableCloneOnUIRecursive.mdx","sourceDirName":"memory","slug":"/memory/makeShareableCloneOnUIRecursive","permalink":"/react-native-worklets/docs/memory/makeShareableCloneOnUIRecursive","draft":false,"unlisted":false,"editUrl":"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-worklets/docs/memory/makeShareableCloneOnUIRecursive.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"makeShareableCloneRecursive","permalink":"/react-native-worklets/docs/memory/makeShareableCloneRecursive"},"next":{"title":"Reanimated Babel plugin","permalink":"/react-native-worklets/docs/category/reanimated-babel-plugin"}}');var t=r(7671),o=r(620);const s={sidebar_position:3},i="makeShareableCloneOnUIRecursive",l={},c=[{value:"Usage",id:"usage",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components},{Details:r,PlatformCompatibility:a}=n;return r||h("Details",!0),a||h("PlatformCompatibility",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"makeshareablecloneonuirecursive",children:"makeShareableCloneOnUIRecursive"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"makeShareableCloneOnUIRecursive"})," recursively converts JavaScript values into shareable references that can be used on different Runtimes than UI Runtime.\nThe reference cannot be manipulated, as it doesn't represent any standard JavaScript object. Changes to the original value don't affect the ",(0,t.jsx)(n.code,{children:"Shareable"}),".\nTo prevent misconceptions about it we freeze the original value for object-like values and for arrays."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Functions like ",(0,t.jsx)(n.code,{children:"runOnUI"}),", ",(0,t.jsx)(n.code,{children:"runOnRuntime"}),", ",(0,t.jsx)(n.code,{children:"runOnJS"}),", ",(0,t.jsx)(n.code,{children:"executeOnUIRuntimeSync"})," and ",(0,t.jsx)(n.code,{children:"runOnUIAsync"})," automatically convert values to ",(0,t.jsx)(n.code,{children:"Shareable"})," references."]})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import { makeShareableCloneOnUIRecursive, makeShareableCloneRecursive } from \'react-native-worklets\';\n\n// The function `() => { console.log(\'Hello world!\'); }` is converted into a Shareable reference,\n// that can be passed to native C++ code via custom function `global.customWorkletScheduler()`.\nconst shareable = makeShareableCloneRecursive(() => {\n\n   // The string `"Hello world!"` is converted into a Shareable reference,\n   // that can be passed from native C++ code to the JS runtime.\n   return makeShareableCloneOnUIRecursive("Hello world!");\n});\n\nconst result = global.customWorkletScheduler(shareable);\n\nconsole.log(result); // "Hello world!"\n'})}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Type definitions"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export type ShareableRef<T = unknown> = {\n  __hostObjectShareableJSRef: T;\n};\n\n// In case of objects with depth or arrays of objects or arrays of arrays etc.\n// we add this utility type that makes it a `SharaebleRef` of the outermost type.\nexport type FlatShareableRef<T> =\n  T extends ShareableRef<infer U> ? ShareableRef<U> : ShareableRef<T>;\n\n\nfunction makeShareableCloneOnUIRecursive<T>(\n  value: T\n): FlatShareableRef<T>\n"})})]}),"\n",(0,t.jsx)(n.h2,{id:"platform-compatibility",children:"Platform compatibility"}),"\n",(0,t.jsx)(a,{android:!0,ios:!0,web:!0})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);